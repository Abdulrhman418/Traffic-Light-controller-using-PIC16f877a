;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/6/2024 6:29:25 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28BA      	GOTO       186
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A2      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A3      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;flasher.c,52 :: 		void interrupt(){
;flasher.c,53 :: 		if(INTF_bit ==1){
0x000B	0x1C8B      	BTFSS      INTF_bit, BitPos(INTF_bit+0)
0x000C	0x2810      	GOTO       L_interrupt25
;flasher.c,54 :: 		INTF_bit =0;
0x000D	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;flasher.c,55 :: 		flag =~flag;
0x000E	0x3010      	MOVLW      16
0x000F	0x0686      	XORWF      PORTB, 1
;flasher.c,56 :: 		}
L_interrupt25:
;flasher.c,57 :: 		}
L_end_interrupt:
L__interrupt48:
0x0010	0x0823      	MOVF       ___savePCLATH, 0
0x0011	0x008A      	MOVWF      PCLATH
0x0012	0x0E22      	SWAPF      ___saveSTATUS, 0
0x0013	0x0083      	MOVWF      STATUS
0x0014	0x0EFF      	SWAPF      R15, 1
0x0015	0x0E7F      	SWAPF      R15, 0
0x0016	0x0009      	RETFIE
; end of _interrupt
_Div_8X8_U:
;__Lib_Math.c,189 :: 		
;__Lib_Math.c,196 :: 		
0x0017	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,197 :: 		
0x0018	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,198 :: 		
0x0019	0x01F8      	CLRF       R8
;__Lib_Math.c,199 :: 		
0x001A	0x3008      	MOVLW      8
;__Lib_Math.c,200 :: 		
0x001B	0x00FC      	MOVWF      R12
;__Lib_Math.c,201 :: 		
0x001C	0x0D70      	RLF        R0, 0
;__Lib_Math.c,202 :: 		
0x001D	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,203 :: 		
0x001E	0x0874      	MOVF       R4, 0
;__Lib_Math.c,204 :: 		
0x001F	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,205 :: 		
0x0020	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,206 :: 		
0x0021	0x2824      	GOTO       $+3
;__Lib_Math.c,207 :: 		
0x0022	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,208 :: 		
0x0023	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,209 :: 		
0x0024	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,210 :: 		
0x0025	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,211 :: 		
0x0026	0x281C      	GOTO       $-10
;__Lib_Math.c,213 :: 		
L_end_Div_8X8_U:
0x0027	0x0008      	RETURN
; end of _Div_8X8_U
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0028	0x1283      	BCF        STATUS, 5
0x0029	0x1303      	BCF        STATUS, 6
0x002A	0x0821      	MOVF       ___DoICPAddr+1, 0
0x002B	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x002C	0x0820      	MOVF       ___DoICPAddr, 0
0x002D	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x002E	0x0008      	RETURN
; end of _____DoICP
_display:
;flasher.c,5 :: 		void display(char count){
;flasher.c,6 :: 		int right =0, left =0;
0x002F	0x1283      	BCF        STATUS, 5
0x0030	0x1303      	BCF        STATUS, 6
0x0031	0x01A9      	CLRF       display_right_L0
0x0032	0x01AA      	CLRF       display_right_L0+1
0x0033	0x01AB      	CLRF       display_left_L0
0x0034	0x01AC      	CLRF       display_left_L0+1
;flasher.c,7 :: 		left =count/10;
0x0035	0x300A      	MOVLW      10
0x0036	0x00F4      	MOVWF      R4
0x0037	0x0828      	MOVF       FARG_display_count, 0
0x0038	0x00F0      	MOVWF      R0
0x0039	0x2017      	CALL       _Div_8X8_U
0x003A	0x0870      	MOVF       R0, 0
0x003B	0x00AB      	MOVWF      display_left_L0
0x003C	0x01AC      	CLRF       display_left_L0+1
;flasher.c,8 :: 		right =count%10;
0x003D	0x300A      	MOVLW      10
0x003E	0x00F4      	MOVWF      R4
0x003F	0x0828      	MOVF       FARG_display_count, 0
0x0040	0x00F0      	MOVWF      R0
0x0041	0x2017      	CALL       _Div_8X8_U
0x0042	0x0878      	MOVF       R8, 0
0x0043	0x00F0      	MOVWF      R0
0x0044	0x0870      	MOVF       R0, 0
0x0045	0x00A9      	MOVWF      display_right_L0
0x0046	0x01AA      	CLRF       display_right_L0+1
;flasher.c,9 :: 		portb.b2 =1;
0x0047	0x1506      	BSF        PORTB, 2
;flasher.c,10 :: 		Portb.b3 =0;
0x0048	0x1186      	BCF        PORTB, 3
;flasher.c,11 :: 		portc =right;
0x0049	0x0829      	MOVF       display_right_L0, 0
0x004A	0x0087      	MOVWF      PORTC
;flasher.c,12 :: 		delay_ms(10);
0x004B	0x301A      	MOVLW      26
0x004C	0x00FC      	MOVWF      R12
0x004D	0x30F8      	MOVLW      248
0x004E	0x00FD      	MOVWF      R13
L_display0:
0x004F	0x0BFD      	DECFSZ     R13, 1
0x0050	0x284F      	GOTO       L_display0
0x0051	0x0BFC      	DECFSZ     R12, 1
0x0052	0x284F      	GOTO       L_display0
0x0053	0x0000      	NOP
;flasher.c,13 :: 		portb.b2 =0;
0x0054	0x1106      	BCF        PORTB, 2
;flasher.c,14 :: 		portb.b3 =1;
0x0055	0x1586      	BSF        PORTB, 3
;flasher.c,15 :: 		portc =left;
0x0056	0x082B      	MOVF       display_left_L0, 0
0x0057	0x0087      	MOVWF      PORTC
;flasher.c,16 :: 		delay_ms(10);
0x0058	0x301A      	MOVLW      26
0x0059	0x00FC      	MOVWF      R12
0x005A	0x30F8      	MOVLW      248
0x005B	0x00FD      	MOVWF      R13
L_display1:
0x005C	0x0BFD      	DECFSZ     R13, 1
0x005D	0x285C      	GOTO       L_display1
0x005E	0x0BFC      	DECFSZ     R12, 1
0x005F	0x285C      	GOTO       L_display1
0x0060	0x0000      	NOP
;flasher.c,17 :: 		}
L_end_display:
0x0061	0x0008      	RETURN
; end of _display
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0062	0x2028      	CALL       _____DoICP
0x0063	0x118A      	BCF        PCLATH, 3
0x0064	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0065	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0066	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0067	0x0AA0      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0068	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0069	0x0AA1      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x006A	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x006B	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x006C	0x2862      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x006D	0x0008      	RETURN
; end of ___CC2DW
_Manual:
;flasher.c,19 :: 		void  Manual(){
;flasher.c,20 :: 		signed char count =0; char s=0;
0x006E	0x1283      	BCF        STATUS, 5
0x006F	0x1303      	BCF        STATUS, 6
0x0070	0x01A6      	CLRF       Manual_count_L0
0x0071	0x01A7      	CLRF       Manual_s_L0
;flasher.c,21 :: 		for(;;){
L_Manual2:
;flasher.c,22 :: 		portd =0b010001;
0x0072	0x3011      	MOVLW      17
0x0073	0x0088      	MOVWF      PORTD
;flasher.c,23 :: 		for( count =3; count>=0; count--){
0x0074	0x3003      	MOVLW      3
0x0075	0x00A6      	MOVWF      Manual_count_L0
L_Manual5:
0x0076	0x3080      	MOVLW      128
0x0077	0x0626      	XORWF      Manual_count_L0, 0
0x0078	0x00F0      	MOVWF      R0
0x0079	0x3080      	MOVLW      128
0x007A	0x3A00      	XORLW      0
0x007B	0x0270      	SUBWF      R0, 0
0x007C	0x1C03      	BTFSS      STATUS, 0
0x007D	0x288D      	GOTO       L_Manual6
;flasher.c,24 :: 		for(s =0; s <=50; s++){
0x007E	0x01A7      	CLRF       Manual_s_L0
L_Manual8:
0x007F	0x0827      	MOVF       Manual_s_L0, 0
0x0080	0x3C32      	SUBLW      50
0x0081	0x1C03      	BTFSS      STATUS, 0
0x0082	0x288B      	GOTO       L_Manual9
;flasher.c,25 :: 		display(count);
0x0083	0x0826      	MOVF       Manual_count_L0, 0
0x0084	0x00A8      	MOVWF      FARG_display_count
0x0085	0x202F      	CALL       _display
;flasher.c,26 :: 		if(flag ==0){
0x0086	0x1A06      	BTFSC      PORTB, 4
0x0087	0x2889      	GOTO       L_Manual11
;flasher.c,27 :: 		return;
0x0088	0x28B9      	GOTO       L_end_Manual
;flasher.c,28 :: 		}
L_Manual11:
;flasher.c,24 :: 		for(s =0; s <=50; s++){
0x0089	0x0AA7      	INCF       Manual_s_L0, 1
;flasher.c,29 :: 		}
0x008A	0x287F      	GOTO       L_Manual8
L_Manual9:
;flasher.c,23 :: 		for( count =3; count>=0; count--){
0x008B	0x03A6      	DECF       Manual_count_L0, 1
;flasher.c,30 :: 		}
0x008C	0x2876      	GOTO       L_Manual5
L_Manual6:
;flasher.c,31 :: 		portd =0b100001;
0x008D	0x3021      	MOVLW      33
0x008E	0x0088      	MOVWF      PORTD
;flasher.c,32 :: 		while(portb.b1 !=1){
L_Manual12:
0x008F	0x1886      	BTFSC      PORTB, 1
0x0090	0x2895      	GOTO       L_Manual13
;flasher.c,33 :: 		if(flag ==0){ return; }
0x0091	0x1A06      	BTFSC      PORTB, 4
0x0092	0x2894      	GOTO       L_Manual14
0x0093	0x28B9      	GOTO       L_end_Manual
L_Manual14:
;flasher.c,34 :: 		}
0x0094	0x288F      	GOTO       L_Manual12
L_Manual13:
;flasher.c,35 :: 		portd =0b001010;
0x0095	0x300A      	MOVLW      10
0x0096	0x0088      	MOVWF      PORTD
;flasher.c,36 :: 		for( count =3; count>=0; count--){
0x0097	0x3003      	MOVLW      3
0x0098	0x00A6      	MOVWF      Manual_count_L0
L_Manual15:
0x0099	0x3080      	MOVLW      128
0x009A	0x0626      	XORWF      Manual_count_L0, 0
0x009B	0x00F0      	MOVWF      R0
0x009C	0x3080      	MOVLW      128
0x009D	0x3A00      	XORLW      0
0x009E	0x0270      	SUBWF      R0, 0
0x009F	0x1C03      	BTFSS      STATUS, 0
0x00A0	0x28B0      	GOTO       L_Manual16
;flasher.c,37 :: 		for(s =0; s <=50; s++){
0x00A1	0x01A7      	CLRF       Manual_s_L0
L_Manual18:
0x00A2	0x0827      	MOVF       Manual_s_L0, 0
0x00A3	0x3C32      	SUBLW      50
0x00A4	0x1C03      	BTFSS      STATUS, 0
0x00A5	0x28AE      	GOTO       L_Manual19
;flasher.c,38 :: 		display(count);
0x00A6	0x0826      	MOVF       Manual_count_L0, 0
0x00A7	0x00A8      	MOVWF      FARG_display_count
0x00A8	0x202F      	CALL       _display
;flasher.c,39 :: 		if(flag ==0){
0x00A9	0x1A06      	BTFSC      PORTB, 4
0x00AA	0x28AC      	GOTO       L_Manual21
;flasher.c,40 :: 		return;
0x00AB	0x28B9      	GOTO       L_end_Manual
;flasher.c,41 :: 		}
L_Manual21:
;flasher.c,37 :: 		for(s =0; s <=50; s++){
0x00AC	0x0AA7      	INCF       Manual_s_L0, 1
;flasher.c,42 :: 		}
0x00AD	0x28A2      	GOTO       L_Manual18
L_Manual19:
;flasher.c,36 :: 		for( count =3; count>=0; count--){
0x00AE	0x03A6      	DECF       Manual_count_L0, 1
;flasher.c,43 :: 		}
0x00AF	0x2899      	GOTO       L_Manual15
L_Manual16:
;flasher.c,44 :: 		portd =0b001100;
0x00B0	0x300C      	MOVLW      12
0x00B1	0x0088      	MOVWF      PORTD
;flasher.c,45 :: 		while(portb.b1 !=1){
L_Manual22:
0x00B2	0x1886      	BTFSC      PORTB, 1
0x00B3	0x28B8      	GOTO       L_Manual23
;flasher.c,46 :: 		if(flag ==0){ return; }
0x00B4	0x1A06      	BTFSC      PORTB, 4
0x00B5	0x28B7      	GOTO       L_Manual24
0x00B6	0x28B9      	GOTO       L_end_Manual
L_Manual24:
;flasher.c,47 :: 		}
0x00B7	0x28B2      	GOTO       L_Manual22
L_Manual23:
;flasher.c,48 :: 		}
0x00B8	0x2872      	GOTO       L_Manual2
;flasher.c,50 :: 		}
L_end_Manual:
0x00B9	0x0008      	RETURN
; end of _Manual
_main:
;flasher.c,59 :: 		void main(){
;flasher.c,60 :: 		trisb =0b00000011; portb.B2 =0; portb.B3 =0; flag =0;
0x00BA	0x3003      	MOVLW      3
0x00BB	0x1683      	BSF        STATUS, 5
0x00BC	0x1303      	BCF        STATUS, 6
0x00BD	0x0086      	MOVWF      TRISB
0x00BE	0x1283      	BCF        STATUS, 5
0x00BF	0x1106      	BCF        PORTB, 2
0x00C0	0x1186      	BCF        PORTB, 3
0x00C1	0x1206      	BCF        PORTB, 4
;flasher.c,61 :: 		trisc =0; portc =0;
0x00C2	0x1683      	BSF        STATUS, 5
0x00C3	0x0187      	CLRF       TRISC
0x00C4	0x1283      	BCF        STATUS, 5
0x00C5	0x0187      	CLRF       PORTC
;flasher.c,62 :: 		trisd =0; portd =0;
0x00C6	0x1683      	BSF        STATUS, 5
0x00C7	0x0188      	CLRF       TRISD
0x00C8	0x1283      	BCF        STATUS, 5
0x00C9	0x0188      	CLRF       PORTD
;flasher.c,63 :: 		GIE_bit =1;
0x00CA	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;flasher.c,64 :: 		INTE_bit =1;
0x00CB	0x160B      	BSF        INTE_bit, BitPos(INTE_bit+0)
;flasher.c,65 :: 		INTEDG_bit =1;
0x00CC	0x1683      	BSF        STATUS, 5
0x00CD	0x1701      	BSF        INTEDG_bit, BitPos(INTEDG_bit+0)
;flasher.c,67 :: 		for(;;){
L_main26:
;flasher.c,68 :: 		char s =0; signed char count =0;
0x00CE	0x1283      	BCF        STATUS, 5
0x00CF	0x01A4      	CLRF       main_s_L1
0x00D0	0x01A5      	CLRF       main_count_L1
;flasher.c,69 :: 		portd =0b010001;
0x00D1	0x3011      	MOVLW      17
0x00D2	0x0088      	MOVWF      PORTD
;flasher.c,70 :: 		for( count =23; count>=0; count--){
0x00D3	0x3017      	MOVLW      23
0x00D4	0x00A5      	MOVWF      main_count_L1
L_main29:
0x00D5	0x3080      	MOVLW      128
0x00D6	0x0625      	XORWF      main_count_L1, 0
0x00D7	0x00F0      	MOVWF      R0
0x00D8	0x3080      	MOVLW      128
0x00D9	0x3A00      	XORLW      0
0x00DA	0x0270      	SUBWF      R0, 0
0x00DB	0x1C03      	BTFSS      STATUS, 0
0x00DC	0x28F2      	GOTO       L_main30
;flasher.c,71 :: 		if(count ==20){
0x00DD	0x0825      	MOVF       main_count_L1, 0
0x00DE	0x3A14      	XORLW      20
0x00DF	0x1D03      	BTFSS      STATUS, 2
0x00E0	0x28E3      	GOTO       L_main32
;flasher.c,72 :: 		portd =0b100001;
0x00E1	0x3021      	MOVLW      33
0x00E2	0x0088      	MOVWF      PORTD
;flasher.c,73 :: 		}
L_main32:
;flasher.c,74 :: 		for(s =0; s <=50; s++){
0x00E3	0x01A4      	CLRF       main_s_L1
L_main33:
0x00E4	0x0824      	MOVF       main_s_L1, 0
0x00E5	0x3C32      	SUBLW      50
0x00E6	0x1C03      	BTFSS      STATUS, 0
0x00E7	0x28F0      	GOTO       L_main34
;flasher.c,75 :: 		display(count);
0x00E8	0x0825      	MOVF       main_count_L1, 0
0x00E9	0x00A8      	MOVWF      FARG_display_count
0x00EA	0x202F      	CALL       _display
;flasher.c,76 :: 		if(flag ==1){
0x00EB	0x1E06      	BTFSS      PORTB, 4
0x00EC	0x28EE      	GOTO       L_main36
;flasher.c,77 :: 		Manual();
0x00ED	0x206E      	CALL       _Manual
;flasher.c,78 :: 		}
L_main36:
;flasher.c,74 :: 		for(s =0; s <=50; s++){
0x00EE	0x0AA4      	INCF       main_s_L1, 1
;flasher.c,79 :: 		}
0x00EF	0x28E4      	GOTO       L_main33
L_main34:
;flasher.c,70 :: 		for( count =23; count>=0; count--){
0x00F0	0x03A5      	DECF       main_count_L1, 1
;flasher.c,80 :: 		}
0x00F1	0x28D5      	GOTO       L_main29
L_main30:
;flasher.c,81 :: 		portd =0b001010;
0x00F2	0x300A      	MOVLW      10
0x00F3	0x0088      	MOVWF      PORTD
;flasher.c,82 :: 		for( count =15; count>=0; count--){
0x00F4	0x300F      	MOVLW      15
0x00F5	0x00A5      	MOVWF      main_count_L1
L_main37:
0x00F6	0x3080      	MOVLW      128
0x00F7	0x0625      	XORWF      main_count_L1, 0
0x00F8	0x00F0      	MOVWF      R0
0x00F9	0x3080      	MOVLW      128
0x00FA	0x3A00      	XORLW      0
0x00FB	0x0270      	SUBWF      R0, 0
0x00FC	0x1C03      	BTFSS      STATUS, 0
0x00FD	0x2913      	GOTO       L_main38
;flasher.c,83 :: 		if(count ==12){
0x00FE	0x0825      	MOVF       main_count_L1, 0
0x00FF	0x3A0C      	XORLW      12
0x0100	0x1D03      	BTFSS      STATUS, 2
0x0101	0x2904      	GOTO       L_main40
;flasher.c,84 :: 		portd =0b001100;
0x0102	0x300C      	MOVLW      12
0x0103	0x0088      	MOVWF      PORTD
;flasher.c,85 :: 		}
L_main40:
;flasher.c,86 :: 		for(s =0; s <=50; s++){
0x0104	0x01A4      	CLRF       main_s_L1
L_main41:
0x0105	0x0824      	MOVF       main_s_L1, 0
0x0106	0x3C32      	SUBLW      50
0x0107	0x1C03      	BTFSS      STATUS, 0
0x0108	0x2911      	GOTO       L_main42
;flasher.c,87 :: 		display(count);
0x0109	0x0825      	MOVF       main_count_L1, 0
0x010A	0x00A8      	MOVWF      FARG_display_count
0x010B	0x202F      	CALL       _display
;flasher.c,88 :: 		if(flag ==1){
0x010C	0x1E06      	BTFSS      PORTB, 4
0x010D	0x290F      	GOTO       L_main44
;flasher.c,89 :: 		Manual();
0x010E	0x206E      	CALL       _Manual
;flasher.c,90 :: 		}
L_main44:
;flasher.c,86 :: 		for(s =0; s <=50; s++){
0x010F	0x0AA4      	INCF       main_s_L1, 1
;flasher.c,91 :: 		}
0x0110	0x2905      	GOTO       L_main41
L_main42:
;flasher.c,82 :: 		for( count =15; count>=0; count--){
0x0111	0x03A5      	DECF       main_count_L1, 1
;flasher.c,92 :: 		}
0x0112	0x28F6      	GOTO       L_main37
L_main38:
;flasher.c,93 :: 		}
0x0113	0x28CE      	GOTO       L_main26
;flasher.c,95 :: 		}
L_end_main:
0x0114	0x2914      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [19]    _interrupt
0x0017      [17]    _Div_8X8_U
0x0028       [7]    _____DoICP
0x002F      [51]    _display
0x0062      [12]    ___CC2DW
0x006E      [76]    _Manual
0x00BA      [91]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [0]    INTF_bit
0x000B       [0]    GIE_bit
0x000B       [0]    INTE_bit
0x0020       [2]    ___DoICPAddr
0x0022       [1]    ___saveSTATUS
0x0023       [1]    ___savePCLATH
0x0024       [1]    main_s_L1
0x0025       [1]    main_count_L1
0x0026       [1]    Manual_count_L0
0x0027       [1]    Manual_s_L0
0x0028       [1]    FARG_display_count
0x0029       [2]    display_right_L0
0x002B       [2]    display_left_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    INTEDG_bit
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x0088       [1]    TRISD
//** Label List: ** 
//----------------------------------------------
  L_display0
  L_display1
  L_Manual2
  L_Manual3
  L_Manual4
  L_Manual5
  L_Manual6
  L_Manual7
  L_Manual8
  L_Manual9
  L_Manual10
  L_Manual11
  L_Manual12
  L_Manual13
  L_Manual14
  L_Manual15
  L_Manual16
  L_Manual17
  L_Manual18
  L_Manual19
  L_Manual20
  L_Manual21
  L_Manual22
  L_Manual23
  L_Manual24
  L_interrupt25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_end_display
  _display
  L_end_Manual
  _Manual
  L_end_interrupt
  _interrupt
  L__interrupt48
  L_end_main
  _main
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  L_end_Mul_8X8_U
  _Mul_8X8_U
  L_end_Mul_16X16_U
  _Mul_16X16_U
  L_end_Div_8X8_U
  _Div_8X8_U
  L_end_Div_16X16_U
  _Div_16X16_U
  L_end_Mul_8X8_S
  _Mul_8X8_S
  L_end_Mul_16X16_S
  _Mul_16X16_S
  L_end_Div_16x16_S_L
  _Div_16x16_S_L
  L_end_Div_16x16_S
  _Div_16x16_S
  L_end_Div_8X8_S
  _Div_8X8_S
  L_end_SDIV3232L
  _SDIV3232L
  L_end_COMFREM
  _COMFREM
  L_end_Div_32x32_S
  _Div_32x32_S
  L_end_Div_32x32_U
  _Div_32x32_U
  L_end_Mul_32x32_U
  _Mul_32x32_U
  L_end_Mul_32x32_S
  _Mul_32x32_S
  L_loopCA2AWs
  L_CA2AWend
  _CCA2AW_Loop1
  L_loopCS2Ss
  L_CS2Send
  _CCS2S_Loop1
  L_CCS2Send
  L_loopFZinSWs
  L_FZinSend
  _CC2D_Loop1
  L_end_____DoICP
  _____DoICP
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2AW
  ___CA2AW
  L_end___CCA2AW
  ___CCA2AW
  L_end___CS2S
  ___CS2S
  L_end___CCS2S
  ___CCS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_display0
  L_display1
  L_Manual2
  L_Manual3
  L_Manual4
  L_Manual5
  L_Manual6
  L_Manual7
  L_Manual8
  L_Manual9
  L_Manual10
  L_Manual11
  L_Manual12
  L_Manual13
  L_Manual14
  L_Manual15
  L_Manual16
  L_Manual17
  L_Manual18
  L_Manual19
  L_Manual20
  L_Manual21
  L_Manual22
  L_Manual23
  L_Manual24
  L_interrupt25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_end_display
  _display
  L_end_Manual
  _Manual
  L_end_interrupt
  _interrupt
  L__interrupt48
  L_end_main
  _main
